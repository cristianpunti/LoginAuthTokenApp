@using LoginAuthToken.Shared.Services
@using LoginAuthToken.Shared.LocalStorage
@rendermode @(new InteractiveServerRenderMode(prerender: false))

@inject NavigationManager Navigation
@inject UserSessionService UserSession
@inject IJSRuntime JS
@inject ILogger<NavMenu> Logger


<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <!-- Logo que navega según la IP -->
        <button class="btn btn-outline-light" @onclick="OnLogoClick" style="cursor:pointer;">
            LoginAuthToken
        </button>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="@($"/counter/{Ip}")">
                <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Counter
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="@($"/student/{Ip}")">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Student
            </NavLink>
        </div>
    </nav>
</div>

@code {
    [Parameter] public string? Ip { get; set; }
    
    private void OnLogoClick()
    {
        try
        {
            var ip = UserSession?.ClientIp;
            var token = UserSession?.Token;

            var isLogged = !string.IsNullOrEmpty(ip) && !string.IsNullOrEmpty(token);

            if (isLogged)
            {
                Navigation.NavigateTo($"/home", forceLoad: true);
            }
            else
            {
                Navigation.NavigateTo("/", forceLoad: true);
            }
        }
        catch (Exception ex)
        {
            Logger.LogError($"Error en OnLogoClick: {ex.Message}");
            Navigation.NavigateTo("/", forceLoad: true); // fallback
        }
    }

}
