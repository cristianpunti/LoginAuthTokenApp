@using LoginAuthToken.Client.ViewModels
@using System.Net.Http.Json
@using LoginAuthToken.Services


@inherits LayoutComponentBase

@inject UserSessionService sessionService
@inject ILogger<MainLayout> Logger


<div class="page">
    <div class="sidebar">
        <ErrorBoundary>
            <ChildContent>
                <NavMenu />
            </ChildContent>
           @*  <ErrorContent Context="Exception">
                @{
                    ErrorContentMessage = Logger.LogError("M");
                }
                <div class="error-ui">
                    @ErrorContentMessage <br />
                </div>
            </ErrorContent> *@
        </ErrorBoundary>
    </div>

    <main>

        <div style="background-color: #1A1A5A" class="top-row px-4">
            <div>
                <div style="display:inline-block; color: white">
                    @sessionService.ClientIp
                </div>
                @if (IsLoggedIn)
                {
                    <div style="display:inline-block; margin-left:10px;">
                        <LogoutButton @rendermode="InteractiveServer" />
                    </div>
                }
            </div>
        </div>
        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

@code {
    public string Ip { get; private set; } = "";

    public void SetIp(string ip)
    {
        Ip = ip;
        InvokeAsync(StateHasChanged); // safe way to trigger re-render
    }
    private string ? ErrorContentMessage { get; set; }

    private bool IsLoggedIn =>
    !string.IsNullOrEmpty(sessionService?.ClientIp) &&
    !string.IsNullOrEmpty(sessionService?.Token);

}

